==> loading configs from ['configs/shapenet/pvcnn/c1.py']
/apps/eb/Python/3.8.6-GCCcore-10.2.0/lib/python3.8/site-packages/setuptools/distutils_patch.py:25: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.
  warnings.warn(
/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/utils/cpp_extension.py:295: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  warnings.warn(WRONG_COMPILER_WARNING.format(
2023-01-05 23:50:57.390595: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
[seed] = 1588147245
[deterministic] = False
[data]
  [num_workers] = 1
  [num_classes] = 3
  [num_shapes] = 1
[dataset]
  [func] = <class 'datasets.shapenet.ShapeNet'>
  [root] = /scratch/fs47816/point_cloud_data/shapenetcore_partanno_segmentation_benchmark_v0_normal
  [with_normal] = False
  [with_one_hot_shape_id] = True
  [normalize] = True
  [jitter] = False
  [num_points] = 100000
[evaluate] = None
[train]
  [num_epochs] = 200
  [batch_size] = 1
  [meters]
    [acc/iou_{}]
      [func] = <class 'meters.shapenet.MeterShapeNet'>
      [num_classes] = 3
  [metric] = acc/iou_test
  [criterion]
    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
  [optimizer]
    [func] = <class 'torch.optim.adam.Adam'>
    [lr] = 0.001
  [scheduler]
    [func] = <class 'torch.optim.lr_scheduler.CosineAnnealingLR'>
    [T_max] = 200
  [save_path] = runs/shapenet.pvcnn.c1
  [metrics] = ['acc/iou_test']
  [checkpoint_path] = runs/shapenet.pvcnn.c1/latest.pth.tar
  [checkpoints_path] = runs/shapenet.pvcnn.c1/latest/e{}.pth.tar
  [best_checkpoint_path] = runs/shapenet.pvcnn.c1/best.pth.tar
  [best_checkpoint_paths] = {'acc/iou_test': 'runs/shapenet.pvcnn.c1/best/best.acc.iou_test.pth.tar'}
[model]
  [func] = <class 'models.shapenet.pvcnn.PVCNN'>
  [num_classes] = 3
  [num_shapes] = 1
  [extra_feature_channels] = 0
[device] = cuda
[device_ids] = [0]

==> loading dataset "[func] = <class 'datasets.shapenet.ShapeNet'>
[root] = /scratch/fs47816/point_cloud_data/shapenetcore_partanno_segmentation_benchmark_v0_normal
[with_normal] = False
[with_one_hot_shape_id] = True
[normalize] = True
[jitter] = False
[num_points] = 100000"

==> creating model "[func] = <class 'models.shapenet.pvcnn.PVCNN'>
[num_classes] = 3
[num_shapes] = 1
[extra_feature_channels] = 0"
==> creating scheduler "[func] = <class 'torch.optim.lr_scheduler.CosineAnnealingLR'>
[T_max] = 200
[last_epoch] = -1"

==> training epoch 0/200
train:   0% 0/21 [00:00<?, ?it/s]train:   0% 0/21 [01:33<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 270, in <module>
    main()
  File "train.py", line 231, in main
    train(model, loader=loaders['train'], criterion=criterion, optimizer=optimizer, scheduler=scheduler,
  File "train.py", line 116, in train
    outputs = model(inputs)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 166, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/scratch/fs47816/workdir/sample_scripts/pvcnn_s/pvcnn/models/shapenet/pvcnn.py", line 151, in forward
    return self.classifier(torch.cat(out_features_list, dim=1))
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/scratch/fs47816/workdir/sample_scripts/pvcnn_s/pvcnn/modules/shared_mlp.py", line 33, in forward
    return self.layers(inputs)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 301, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/apps/eb/PyTorch/1.10.0-fosscuda-2020b-Python-3.8.6/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 297, in _conv_forward
    return F.conv1d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [256, 355, 1], expected input[1, 1155, 100000] to have 355 channels, but got 1155 channels instead
