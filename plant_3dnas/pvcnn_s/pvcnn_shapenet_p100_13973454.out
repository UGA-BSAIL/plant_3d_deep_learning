--------------------------------------------------------------------------
A process has executed an operation involving a call to the
"fork()" system call to create a child process.  Open MPI is currently
operating in a condition that could result in memory corruption or
other system errors; your job may hang, crash, or produce silent
data corruption.  The use of fork() (or system() or other calls that
create child processes) is strongly discouraged.

The process that invoked fork was:

  Local host:          [[4544,1],0] (PID 100077)

If you are *absolutely sure* that your application will successfully
and correctly survive a call to fork(), you may disable this warning
by setting the mpi_warn_on_fork MCA parameter to 0.
--------------------------------------------------------------------------
==> loading configs from ['configs/shapenet/pvcnn/c1.py']
/apps/eb/PyTorch/1.6.0-fosscuda-2019b-Python-3.7.4/lib/python3.7/site-packages/torch/utils/cpp_extension.py:252: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
[seed] = 1588147245
[deterministic] = False
[data]
  [num_workers] = 16
  [num_classes] = 3
  [num_shapes] = 1
[dataset]
  [func] = <class 'datasets.shapenet.ShapeNet'>
  [root] = /scratch/fs47816/point_cloud_data/shapenetcore_partanno_segmentation_benchmark_v0_normal
  [with_normal] = False
  [with_one_hot_shape_id] = True
  [normalize] = True
  [jitter] = False
  [num_points] = 100000
[evaluate] = None
[train]
  [num_epochs] = 200
  [batch_size] = 1
  [meters]
    [acc/iou_{}]
      [func] = <class 'meters.shapenet.MeterShapeNet'>
      [num_classes] = 3
  [metric] = acc/iou_test
  [criterion]
    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
  [optimizer]
    [func] = <class 'torch.optim.adam.Adam'>
    [lr] = 0.001
  [scheduler]
    [func] = <class 'torch.optim.lr_scheduler.CosineAnnealingLR'>
    [T_max] = 200
  [save_path] = runs/shapenet.pvcnn.c1
  [metrics] = ['acc/iou_test']
  [checkpoint_path] = runs/shapenet.pvcnn.c1/latest.pth.tar
  [checkpoints_path] = runs/shapenet.pvcnn.c1/latest/e{}.pth.tar
  [best_checkpoint_path] = runs/shapenet.pvcnn.c1/best.pth.tar
  [best_checkpoint_paths] = {'acc/iou_test': 'runs/shapenet.pvcnn.c1/best/best.acc.iou_test.pth.tar'}
[model]
  [func] = <class 'models.shapenet.pvcnn.PVCNN'>
  [num_classes] = 3
  [num_shapes] = 1
  [extra_feature_channels] = 0
[device] = cuda
[device_ids] = [0]

==> loading dataset "[func] = <class 'datasets.shapenet.ShapeNet'>
[root] = /scratch/fs47816/point_cloud_data/shapenetcore_partanno_segmentation_benchmark_v0_normal
[with_normal] = False
[with_one_hot_shape_id] = True
[normalize] = True
[jitter] = False
[num_points] = 100000"

==> creating model "[func] = <class 'models.shapenet.pvcnn.PVCNN'>
[num_classes] = 3
[num_shapes] = 1
[extra_feature_channels] = 0"
Traceback (most recent call last):
  File "train.py", line 270, in <module>
    main()
  File "train.py", line 183, in main
    model = configs.model()
  File "/scratch/fs47816/workdir/sample_scripts/pvcnn_s/pvcnn/utils/config.py", line 63, in __call__
    return self._func_(*args, **kwargs)
  File "/scratch/fs47816/workdir/sample_scripts/pvcnn_s/pvcnn/models/shapenet/pvcnn.py", line 88, in __init__
    blocks=self.blocks, in_channels=self.in_channels, with_se=True, normalize=False,
  File "/apps/eb/PyTorch/1.6.0-fosscuda-2019b-Python-3.7.4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 772, in __getattr__
    type(self).__name__, name))
torch.nn.modules.module.ModuleAttributeError: 'PVCNN' object has no attribute 'blocks'
