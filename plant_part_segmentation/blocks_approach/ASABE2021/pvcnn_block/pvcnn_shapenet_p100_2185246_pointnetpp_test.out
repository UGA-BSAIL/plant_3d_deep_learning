--------------------------------------------------------------------------
A process has executed an operation involving a call to the
"fork()" system call to create a child process.  Open MPI is currently
operating in a condition that could result in memory corruption or
other system errors; your job may hang, crash, or produce silent
data corruption.  The use of fork() (or system() or other calls that
create child processes) is strongly discouraged.

The process that invoked fork was:

  Local host:          [[10110,1],0] (PID 258029)

If you are *absolutely sure* that your application will successfully
and correctly survive a call to fork(), you may disable this warning
by setting the mpi_warn_on_fork MCA parameter to 0.
--------------------------------------------------------------------------
==> loading configs from ['configs/shapenet/pointnet2msg.py']
/apps/eb/PyTorch/1.6.0-fosscuda-2019b-Python-3.7.4/lib/python3.7/site-packages/torch/utils/cpp_extension.py:252: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
eval:   0% 0/403 [00:00<?, ?it/s]eval:   0% 1/403 [00:02<18:41,  2.79s/it]eval:   0% 2/403 [00:03<15:07,  2.26s/it]eval:   1% 3/403 [00:04<12:21,  1.85s/it]eval:   1% 4/403 [00:05<10:01,  1.51s/it]eval:   1% 5/403 [00:06<09:07,  1.38s/it]eval:   1% 6/403 [00:06<06:44,  1.02s/it]eval:   2% 7/403 [00:07<06:50,  1.04s/it]eval:   2% 8/403 [00:08<05:15,  1.25it/s]eval:   2% 9/403 [00:08<03:58,  1.65it/s]eval:   2% 10/403 [00:08<03:01,  2.17it/s]eval:   3% 11/403 [00:08<02:22,  2.76it/s]eval:   3% 12/403 [00:09<04:00,  1.62it/s]eval:   3% 13/403 [00:09<03:01,  2.15it/s]eval:   3% 14/403 [00:09<02:20,  2.76it/s]eval:   4% 15/403 [00:09<01:51,  3.49it/s]eval:   4% 16/403 [00:10<01:48,  3.57it/s]eval:   4% 18/403 [00:10<01:28,  4.36it/s]eval:   5% 19/403 [00:11<02:16,  2.80it/s]eval:   5% 20/403 [00:12<03:35,  1.78it/s]eval:   5% 21/403 [00:12<02:46,  2.30it/s]eval:   5% 22/403 [00:12<02:19,  2.73it/s]eval:   6% 23/403 [00:12<02:04,  3.06it/s]eval:   6% 24/403 [00:12<01:53,  3.33it/s]eval:   6% 26/403 [00:13<01:28,  4.27it/s]eval:   7% 27/403 [00:13<01:19,  4.71it/s]eval:   7% 28/403 [00:14<04:02,  1.55it/s]eval:   7% 29/403 [00:16<05:08,  1.21it/s]eval:   7% 30/403 [00:16<03:47,  1.64it/s]eval:   8% 31/403 [00:16<02:57,  2.09it/s]eval:   8% 32/403 [00:16<02:33,  2.42it/s]eval:   8% 33/403 [00:16<02:01,  3.04it/s]eval:   9% 35/403 [00:17<01:37,  3.78it/s]eval:   9% 36/403 [00:17<01:31,  4.01it/s]eval:   9% 38/403 [00:17<01:12,  5.01it/s]eval:  10% 40/403 [00:17<01:00,  6.04it/s]eval:  10% 41/403 [00:17<01:01,  5.89it/s]eval:  10% 42/403 [00:17<00:57,  6.31it/s]eval:  11% 43/403 [00:18<00:55,  6.45it/s]eval:  11% 44/403 [00:18<00:53,  6.73it/s]eval:  11% 45/403 [00:18<00:48,  7.39it/s]eval:  12% 47/403 [00:18<00:41,  8.50it/s]eval:  12% 49/403 [00:18<00:38,  9.21it/s]eval:  13% 51/403 [00:18<00:35,  9.82it/s]eval:  13% 53/403 [00:19<00:37,  9.21it/s]eval:  13% 54/403 [00:19<00:42,  8.30it/s]eval:  14% 55/403 [00:19<00:41,  8.34it/s]eval:  14% 57/403 [00:19<00:42,  8.18it/s]eval:  14% 58/403 [00:19<00:44,  7.84it/s]eval:  15% 60/403 [00:19<00:40,  8.39it/s]eval:  15% 61/403 [00:20<00:44,  7.67it/s]eval:  16% 63/403 [00:20<00:40,  8.42it/s]eval:  16% 64/403 [00:20<00:40,  8.28it/s]eval:  16% 65/403 [00:20<00:38,  8.72it/s]eval:  16% 66/403 [00:20<00:37,  9.02it/s]eval:  17% 67/403 [00:20<00:36,  9.28it/s]eval:  17% 69/403 [00:21<00:41,  8.03it/s]eval:  17% 70/403 [00:21<00:41,  8.10it/s]eval:  18% 71/403 [00:21<00:39,  8.47it/s]eval:  18% 73/403 [00:21<00:36,  9.15it/s]eval:  18% 74/403 [00:21<00:51,  6.42it/s]eval:  19% 75/403 [00:22<02:31,  2.16it/s]eval:  19% 76/403 [00:23<02:07,  2.57it/s]eval:  19% 77/403 [00:23<01:40,  3.25it/s]eval:  19% 78/403 [00:23<01:24,  3.83it/s]eval:  20% 79/403 [00:23<01:10,  4.60it/s]eval:  20% 80/403 [00:23<01:05,  4.90it/s]eval:  20% 82/403 [00:23<00:59,  5.41it/s]eval:  21% 83/403 [00:24<00:55,  5.77it/s]eval:  21% 84/403 [00:25<02:36,  2.04it/s]eval:  21% 86/403 [00:25<01:59,  2.65it/s]eval:  22% 88/403 [00:25<01:33,  3.37it/s]eval:  22% 90/403 [00:25<01:12,  4.32it/s]eval:  23% 92/403 [00:26<00:58,  5.35it/s]eval:  23% 94/403 [00:26<00:47,  6.48it/s]eval:  24% 96/403 [00:26<00:47,  6.48it/s]eval:  24% 97/403 [00:26<00:44,  6.91it/s]eval:  25% 99/403 [00:26<00:38,  7.95it/s]eval:  25% 101/403 [00:27<00:36,  8.25it/s]eval:  26% 103/403 [00:27<00:31,  9.38it/s]eval:  26% 105/403 [00:27<00:28, 10.62it/s]eval:  27% 107/403 [00:27<00:32,  9.15it/s]eval:  27% 109/403 [00:27<00:33,  8.66it/s]eval:  27% 110/403 [00:27<00:32,  8.88it/s]eval:  28% 111/403 [00:28<00:36,  8.02it/s]eval:  28% 113/403 [00:28<00:33,  8.69it/s]eval:  28% 114/403 [00:28<00:36,  7.99it/s]eval:  29% 115/403 [00:28<00:47,  6.11it/s]eval:  29% 116/403 [00:28<00:41,  6.89it/s]eval:  29% 117/403 [00:29<00:45,  6.34it/s]eval:  29% 118/403 [00:29<00:49,  5.81it/s]eval:  30% 120/403 [00:29<00:42,  6.66it/s]eval:  30% 122/403 [00:29<00:36,  7.78it/s]eval:  31% 123/403 [00:29<00:46,  6.04it/s]eval:  31% 124/403 [00:30<00:50,  5.53it/s]eval:  31% 125/403 [00:30<00:48,  5.77it/s]eval:  32% 127/403 [00:30<00:39,  6.92it/s]eval:  32% 129/403 [00:30<00:37,  7.27it/s]eval:  33% 131/403 [00:30<00:35,  7.76it/s]eval:  33% 133/403 [00:31<00:34,  7.77it/s]eval:  33% 134/403 [00:31<00:32,  8.24it/s]eval:  34% 136/403 [00:31<00:30,  8.75it/s]eval:  34% 137/403 [00:31<00:32,  8.16it/s]eval:  34% 139/403 [00:31<00:32,  8.07it/s]eval:  35% 140/403 [00:32<00:47,  5.57it/s]eval:  35% 141/403 [00:32<00:45,  5.78it/s]eval:  35% 142/403 [00:32<00:49,  5.23it/s]eval:  35% 143/403 [00:32<00:47,  5.45it/s]eval:  36% 144/403 [00:32<00:44,  5.80it/s]eval:  36% 146/403 [00:32<00:38,  6.62it/s]eval:  37% 148/403 [00:33<00:33,  7.56it/s]eval:  37% 150/403 [00:33<00:29,  8.72it/s]eval:  38% 152/403 [00:33<00:30,  8.20it/s]eval:  38% 153/403 [00:33<00:30,  8.10it/s]eval:  38% 155/403 [00:33<00:28,  8.74it/s]eval:  39% 156/403 [00:34<00:36,  6.70it/s]eval:  39% 157/403 [00:34<00:39,  6.28it/s]eval:  39% 159/403 [00:34<00:32,  7.54it/s]eval:  40% 161/403 [00:34<00:29,  8.12it/s]eval:  40% 162/403 [00:34<00:29,  8.19it/s]eval:  40% 163/403 [00:34<00:29,  8.25it/s]eval:  41% 165/403 [00:35<00:26,  9.00it/s]eval:  41% 167/403 [00:35<00:23,  9.84it/s]eval:  42% 169/403 [00:35<00:24,  9.69it/s]eval:  42% 171/403 [00:35<00:23,  9.82it/s]eval:  43% 173/403 [00:35<00:21, 10.91it/s]eval:  43% 175/403 [00:36<00:24,  9.47it/s]eval:  44% 177/403 [00:36<00:23,  9.65it/s]eval:  44% 179/403 [00:36<00:25,  8.95it/s]eval:  45% 180/403 [00:36<00:26,  8.57it/s]eval:  45% 181/403 [00:36<00:25,  8.85it/s]eval:  45% 183/403 [00:36<00:22,  9.88it/s]eval:  46% 185/403 [00:37<00:28,  7.68it/s]eval:  46% 186/403 [00:37<00:40,  5.37it/s]eval:  47% 188/403 [00:37<00:34,  6.18it/s]eval:  47% 189/403 [00:37<00:30,  6.92it/s]eval:  47% 191/403 [00:38<00:27,  7.69it/s]eval:  48% 192/403 [00:38<00:25,  8.17it/s]eval:  48% 193/403 [00:38<00:48,  4.30it/s]eval:  48% 194/403 [00:38<00:44,  4.71it/s]eval:  49% 196/403 [00:40<01:33,  2.21it/s]eval:  49% 197/403 [00:42<02:24,  1.43it/s]eval:  49% 198/403 [00:42<02:08,  1.60it/s]eval:  49% 199/403 [00:44<03:13,  1.06it/s]eval:  50% 200/403 [00:44<02:34,  1.31it/s]eval:  50% 201/403 [00:44<02:01,  1.66it/s]eval:  50% 203/403 [00:45<01:31,  2.20it/s]eval:  51% 204/403 [00:45<01:10,  2.80it/s]eval:  51% 205/403 [00:45<00:55,  3.56it/s]eval:  51% 207/403 [00:45<00:42,  4.62it/s]eval:  52% 208/403 [00:45<00:44,  4.36it/s]eval:  52% 209/403 [00:47<02:12,  1.47it/s]eval:  52% 210/403 [00:47<01:41,  1.90it/s]eval:  52% 211/403 [00:47<01:23,  2.30it/s]eval:  53% 212/403 [00:48<01:13,  2.59it/s]eval:  53% 213/403 [00:48<01:09,  2.72it/s]eval:  53% 215/403 [00:48<00:53,  3.54it/s]eval:  54% 217/403 [00:48<00:45,  4.07it/s]eval:  54% 219/403 [00:49<00:38,  4.83it/s]eval:  55% 221/403 [00:49<00:29,  6.07it/s]eval:  55% 222/403 [00:49<00:27,  6.53it/s]eval:  56% 224/403 [00:49<00:28,  6.35it/s]eval:  56% 226/403 [00:50<00:26,  6.75it/s]eval:  57% 228/403 [00:50<00:29,  5.99it/s]eval:  57% 229/403 [00:50<00:31,  5.58it/s]eval:  57% 230/403 [00:51<00:43,  3.96it/s]eval:  57% 231/403 [00:51<00:43,  3.97it/s]eval:  58% 233/403 [00:51<00:34,  5.00it/s]eval:  58% 234/403 [00:51<00:38,  4.34it/s]eval:  59% 236/403 [00:51<00:30,  5.47it/s]eval:  59% 238/403 [00:52<00:27,  5.90it/s]eval:  60% 240/403 [00:52<00:23,  6.81it/s]eval:  60% 241/403 [00:52<00:29,  5.57it/s]eval:  60% 242/403 [00:52<00:29,  5.45it/s]eval:  60% 243/403 [00:53<00:31,  5.11it/s]eval:  61% 244/403 [00:53<00:28,  5.61it/s]eval:  61% 245/403 [00:53<00:41,  3.78it/s]eval:  61% 246/403 [00:53<00:35,  4.48it/s]eval:  62% 248/403 [00:53<00:28,  5.44it/s]eval:  62% 250/403 [00:54<00:31,  4.86it/s]eval:  63% 252/403 [00:55<00:54,  2.77it/s]eval:  63% 253/403 [00:56<00:46,  3.19it/s]eval:  63% 254/403 [00:56<00:38,  3.89it/s]eval:  64% 256/403 [00:56<00:31,  4.61it/s]eval:  64% 258/403 [00:56<00:24,  5.83it/s]eval:  64% 259/403 [00:56<00:31,  4.59it/s]eval:  65% 261/403 [00:57<00:25,  5.65it/s]eval:  65% 263/403 [00:57<00:23,  6.04it/s]eval:  66% 264/403 [00:57<00:21,  6.45it/s]eval:  66% 266/403 [00:57<00:18,  7.40it/s]eval:  66% 267/403 [00:57<00:20,  6.79it/s]eval:  67% 268/403 [00:58<00:28,  4.78it/s]eval:  67% 270/403 [00:58<00:23,  5.55it/s]eval:  67% 272/403 [00:58<00:20,  6.27it/s]eval:  68% 273/403 [00:59<00:31,  4.10it/s]eval:  68% 274/403 [00:59<00:30,  4.21it/s]eval:  68% 276/403 [00:59<00:24,  5.22it/s]eval:  69% 277/403 [01:00<00:34,  3.64it/s]eval:  69% 278/403 [01:00<00:33,  3.72it/s]eval:  69% 280/403 [01:00<00:30,  4.06it/s]eval:  70% 281/403 [01:01<00:42,  2.90it/s]eval:  70% 282/403 [01:01<00:41,  2.94it/s]eval:  70% 283/403 [01:01<00:37,  3.24it/s]eval:  70% 284/403 [01:03<01:41,  1.17it/s]eval:  71% 285/403 [01:04<01:15,  1.57it/s]eval:  71% 287/403 [01:04<00:58,  1.97it/s]eval:  71% 288/403 [01:04<00:46,  2.45it/s]eval:  72% 290/403 [01:04<00:34,  3.27it/s]eval:  72% 291/403 [01:06<01:23,  1.35it/s]eval:  73% 293/403 [01:06<01:03,  1.73it/s]eval:  73% 294/403 [01:07<00:58,  1.86it/s]eval:  73% 295/403 [01:07<00:43,  2.46it/s]eval:  74% 297/403 [01:07<00:33,  3.19it/s]eval:  74% 298/403 [01:07<00:26,  3.93it/s]eval:  74% 299/403 [01:08<00:30,  3.45it/s]eval:  75% 301/403 [01:08<00:25,  3.98it/s]eval:  75% 302/403 [01:10<01:15,  1.35it/s]eval:  75% 303/403 [01:10<00:58,  1.71it/s]eval:  76% 305/403 [01:10<00:46,  2.12it/s]eval:  76% 306/403 [01:11<00:35,  2.70it/s]eval:  76% 308/403 [01:11<00:26,  3.56it/s]eval:  77% 309/403 [01:11<00:26,  3.50it/s]eval:  77% 310/403 [01:11<00:22,  4.09it/s]eval:  77% 312/403 [01:12<00:20,  4.47it/s]eval:  78% 313/403 [01:12<00:25,  3.57it/s]eval:  78% 314/403 [01:12<00:29,  3.03it/s]eval:  78% 315/403 [01:13<00:24,  3.53it/s]eval:  78% 316/403 [01:13<00:22,  3.86it/s]eval:  79% 317/403 [01:13<00:19,  4.40it/s]eval:  79% 318/403 [01:13<00:16,  5.23it/s]eval:  79% 319/403 [01:13<00:15,  5.40it/s]eval:  79% 320/403 [01:14<00:20,  4.08it/s]eval:  80% 321/403 [01:14<00:22,  3.58it/s]eval:  80% 322/403 [01:14<00:21,  3.69it/s]eval:  80% 323/403 [01:14<00:17,  4.50it/s]eval:  80% 324/403 [01:14<00:16,  4.88it/s]eval:  81% 325/403 [01:15<00:19,  3.95it/s]eval:  81% 326/403 [01:15<00:19,  3.91it/s]eval:  81% 327/403 [01:15<00:16,  4.63it/s]eval:  81% 328/403 [01:16<00:17,  4.20it/s]eval:  82% 329/403 [01:16<00:16,  4.48it/s]eval:  82% 330/403 [01:16<00:15,  4.72it/s]eval:  82% 332/403 [01:16<00:12,  5.53it/s]eval:  83% 333/403 [01:16<00:12,  5.77it/s]eval:  83% 334/403 [01:18<00:44,  1.54it/s]eval:  83% 335/403 [01:18<00:36,  1.86it/s]eval:  83% 336/403 [01:19<00:32,  2.04it/s]eval:  84% 338/403 [01:19<00:24,  2.61it/s]eval:  84% 339/403 [01:19<00:20,  3.14it/s]eval:  84% 340/403 [01:19<00:19,  3.22it/s]eval:  85% 341/403 [01:20<00:21,  2.83it/s]eval:  85% 342/403 [01:20<00:17,  3.53it/s]eval:  85% 344/403 [01:20<00:13,  4.48it/s]eval:  86% 345/403 [01:20<00:13,  4.18it/s]eval:  86% 346/403 [01:21<00:14,  4.07it/s]eval:  86% 347/403 [01:21<00:13,  4.18it/s]eval:  86% 348/403 [01:21<00:15,  3.67it/s]eval:  87% 349/403 [01:22<00:17,  3.16it/s]eval:  87% 350/403 [01:22<00:13,  3.86it/s]eval:  87% 351/403 [01:22<00:12,  4.23it/s]eval:  87% 352/403 [01:22<00:11,  4.37it/s]eval:  88% 353/403 [01:22<00:12,  4.04it/s]eval:  88% 355/403 [01:23<00:10,  4.76it/s]eval:  88% 356/403 [01:23<00:08,  5.48it/s]eval:  89% 357/403 [01:23<00:08,  5.67it/s]eval:  89% 359/403 [01:24<00:08,  4.95it/s]eval:  89% 360/403 [01:24<00:07,  5.53it/s]eval:  90% 362/403 [01:24<00:07,  5.81it/s]eval:  90% 363/403 [01:24<00:07,  5.10it/s]eval:  90% 364/403 [01:25<00:09,  4.14it/s]eval:  91% 366/403 [01:25<00:07,  5.18it/s]eval:  91% 367/403 [01:25<00:06,  5.44it/s]eval:  92% 369/403 [01:25<00:05,  6.74it/s]eval:  92% 370/403 [01:25<00:05,  5.83it/s]eval:  92% 371/403 [01:25<00:05,  5.42it/s]eval:  93% 373/403 [01:26<00:04,  6.12it/s]eval:  93% 374/403 [01:26<00:07,  3.80it/s]eval:  93% 375/403 [01:26<00:06,  4.23it/s]eval:  93% 376/403 [01:27<00:06,  4.23it/s]eval:  94% 377/403 [01:27<00:05,  4.34it/s]eval:  94% 378/403 [01:27<00:05,  4.53it/s]eval:  94% 379/403 [01:27<00:05,  4.44it/s]eval:  94% 380/403 [01:28<00:05,  3.85it/s]eval:  95% 381/403 [01:28<00:05,  3.72it/s]eval:  95% 382/403 [01:28<00:06,  3.28it/s]eval:  95% 383/403 [01:29<00:06,  2.92it/s]eval:  95% 384/403 [01:29<00:06,  3.10it/s]eval:  96% 385/403 [01:29<00:04,  3.67it/s]eval:  96% 386/403 [01:29<00:04,  3.94it/s]eval:  96% 387/403 [01:30<00:04,  3.21it/s]eval:  96% 388/403 [01:30<00:04,  3.66it/s]eval:  97% 389/403 [01:30<00:03,  4.46it/s]eval:  97% 391/403 [01:30<00:02,  5.23it/s]eval:  98% 393/403 [01:31<00:01,  5.39it/s]eval:  98% 394/403 [01:31<00:01,  4.98it/s]eval:  98% 396/403 [01:31<00:01,  4.62it/s]eval:  99% 398/403 [01:32<00:00,  5.78it/s]eval:  99% 399/403 [01:32<00:00,  4.77it/s]eval:  99% 400/403 [01:32<00:00,  5.62it/s]eval: 100% 402/403 [01:32<00:00,  6.27it/s]eval: 100% 403/403 [01:32<00:00,  6.84it/s]eval: 100% 403/403 [01:32<00:00,  4.34it/s]
[seed] = 1588147245
[deterministic] = False
[data]
  [num_workers] = 16
  [num_classes] = 3
  [num_shapes] = 1
[dataset]
  [func] = <class 'datasets.shapenet.ShapeNet'>
  [root] = /scratch/fs47816/point_cloud_data/plant_data
  [with_normal] = False
  [with_one_hot_shape_id] = True
  [normalize] = True
  [jitter] = True
  [num_points] = 2048
  [split] = test
[evaluate]
  [fn] = <function evaluate at 0x2b39fad31710>
  [num_votes] = 1
  [dataset]
    [split] = test
  [best_checkpoint_path] = runs/shapenet.pointnet2msg/best.pth.tar
  [predictions_path] = runs/shapenet.pointnet2msg/best.predictions
  [stats_path] = runs/shapenet.pointnet2msg/best.eval.npy
[train]
  [num_epochs] = 500
  [batch_size] = 32
  [meters]
    [acc/iou_{}]
      [func] = <class 'meters.shapenet.MeterShapeNet'>
      [num_classes] = 3
  [metric] = acc/iou_test
  [criterion]
    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
  [optimizer]
    [func] = <class 'torch.optim.adam.Adam'>
    [lr] = 0.001
  [scheduler]
    [func] = <class 'torch.optim.lr_scheduler.StepLR'>
    [step_size] = 20
    [gamma] = 0.5
  [save_path] = runs/shapenet.pointnet2msg
[model]
  [func] = <class 'models.shapenet.pointnetpp.PointNet2MSG'>
  [num_classes] = 3
  [num_shapes] = 1
  [extra_feature_channels] = 0
[device] = cuda
[device_ids] = [0]

==> loading dataset "[func] = <class 'datasets.shapenet.ShapeNet'>
[root] = /scratch/fs47816/point_cloud_data/plant_data
[with_normal] = False
[with_one_hot_shape_id] = True
[normalize] = True
[jitter] = True
[num_points] = 2048
[split] = test"

==> creating model "[func] = <class 'models.shapenet.pointnetpp.PointNet2MSG'>
[num_classes] = 3
[num_shapes] = 1
[extra_feature_channels] = 0"
==> loading checkpoint "runs/shapenet.pointnet2msg/best.pth.tar"
shapeIoU:    79.14
clssPrec:    89.86     77.06     93.61
clssRecall:    93.25     83.56     92.57
clssIoU:    84.11     66.51     86.80
Accuracy: 92.68
meanIoU: 79.14
